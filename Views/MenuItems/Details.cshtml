@model MenuItem

@{
    ViewData["Title"] = "Menu Item Details";
}

<div class="container mt-4">
    <div class="card shadow-sm">
        <div class="card-header bg-primary text-white">
            <h3 class="mb-0">@Model.Name</h3>
        </div>
        <div class="card-body">
            <p><strong>Description:</strong> @Model.Description</p>
            <p>
                <strong>Category:</strong>
                <span class="badge bg-secondary">@Model.Category</span>
            </p>
            <p><strong>Price:</strong> @Model.Price.ToString("C")</p>
            <p>
                <strong>Availability:</strong>
                @if (Model.Availability)
                {
                    <span class="badge bg-success">Available</span>
                }
                else
                {
                    <span class="badge bg-danger">Unavailable</span>
                }
            </p>
        </div>
        <div class="card-footer d-flex justify-content-between">
            @if (User.IsInRole("Admin"))
            {
                <a asp-action="Edit" asp-route-id="@Model.ItemId" class="btn btn-warning">Edit</a>
            }
            else
            {
                <button class="btn btn-primary"
                        onclick="handleAddToCart(@Model.ItemId, '@Model.Name', @Model.Price, '@Model.Category', @(Model.Availability.ToString().ToLower()))">
                    Add to Cart
                </button>
            }
            <a asp-action="Index" class="btn btn-secondary">Back to List</a>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function handleAddToCart(id, name, price, category, available) {
            

            
            var isLoggedIn = '@User.Identity.IsAuthenticated'.toLowerCase() === 'true';
            if (!isLoggedIn) {
                alert("Please login first!");
                return;
            }

            
            if (!available) {
                alert("Choose another item! This one is unavailable.");
                return;
            }

            
            let cart = JSON.parse(localStorage.getItem('foodCart')) || [];

            
            let existingItem = cart.find(item => item.id === id);
            if (existingItem) {
                existingItem.quantity += 1;
                existingItem.totalPrice = existingItem.quantity * existingItem.price;
            } else {
                cart.push({ id, name, price, category, quantity: 1, totalPrice: price });
            }

            
            localStorage.setItem('foodCart', JSON.stringify(cart));

            alert(name + " added to cart!");
        }
    </script>
}
