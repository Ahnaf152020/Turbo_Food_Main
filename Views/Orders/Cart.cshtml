@model dynamic
@{
    ViewData["Title"] = "Your Cart";
}

<div class="container mt-5">
    <div class="card shadow-lg">
        <div class="card-header bg-primary text-white">
            <h2 class="mb-0">Your Selected Items</h2>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover align-middle">
                    <thead class="table-light">
                        <tr>
                            <th>Name</th>
                            <th>Category</th>
                            <th>Price</th>
                            <th>Quantity</th>
                            <th>Total</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody id="cartBody">
           
                    </tbody>
                </table>
            </div>

            <div class="d-flex justify-content-between align-items-center mt-4">
                <h4>Total: $<span id="cartTotal">0.00</span></h4>
                <div>
                    <button class="btn btn-secondary me-2" id="cancelBtn">Cancel</button>
                    <button class="btn btn-success" id="checkoutBtn">Checkout</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const checkoutUrl = '@Url.Action("Payment", "Orders")';
            const menuUrl = '@Url.Action("Index", "MenuItems")';

            function loadCart() {
                const cart = JSON.parse(localStorage.getItem('foodCart')) || [];
                const tbody = document.getElementById('cartBody');
                tbody.innerHTML = '';
                let total = 0;

                cart.forEach((item, index) => {
                    total += item.totalPrice;
                    tbody.innerHTML += `
                    <tr>
                        <td>${item.name}</td>
                        <td>${item.category}</td>
                        <td>$${item.price.toFixed(2)}</td>
                        <td>
                            <input type="number" min="1" class="form-control form-control-sm" value="${item.quantity}" onchange="updateQuantity(${index}, this.value)">
                        </td>
                        <td>$${item.totalPrice.toFixed(2)}</td>
                        <td>
                            <button class="btn btn-sm btn-danger" onclick="removeItem(${index})">Remove</button>
                        </td>
                    </tr>`;
                });

                document.getElementById('cartTotal').innerText = total.toFixed(2);
            }

            window.updateQuantity = function(index, qty) {
                const cart = JSON.parse(localStorage.getItem('foodCart'));
                if (qty < 1) qty = 1;
                cart[index].quantity = parseInt(qty);
                cart[index].totalPrice = cart[index].quantity * cart[index].price;
                localStorage.setItem('foodCart', JSON.stringify(cart));
                loadCart();
            }

            window.removeItem = function(index) {
                const cart = JSON.parse(localStorage.getItem('foodCart'));
                cart.splice(index, 1);
                localStorage.setItem('foodCart', JSON.stringify(cart));
                loadCart();
            }

            document.getElementById('checkoutBtn').addEventListener('click', function() {
                window.location.href = checkoutUrl;
            });

            document.getElementById('cancelBtn').addEventListener('click', function() {
                if (confirm('Are you sure you want to clear your cart?')) {
                    localStorage.removeItem('foodCart');
                    loadCart();
                    window.location.href = menuUrl;
                }
            });

            loadCart();
        });
    </script>
}


<style>
    
    .card {
        border-radius: 15px;
    }

    .table th, .table td {
        vertical-align: middle !important;
    }

    input[type="number"] {
        max-width: 80px;
    }

    #checkoutBtn, #cancelBtn {
        min-width: 100px;
    }

    @@media (max-width: 576px) {
        .d-flex.justify-content-between

    {
        flex-direction: column;
        align-items: stretch;
        gap: 10px;
    }

    }
</style>
