@{
    ViewData["Title"] = "Payment";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card shadow-lg">
                <div class="card-header bg-info text-white">
                    <h2 class="mb-0">Payment Information</h2>
                </div>
                <div class="card-body">
                    <div id="orderSummary" class="mb-4 p-3 border rounded">
                        <h5>Order Summary</h5>
                        <div id="summaryContent"></div>
                        <div class="d-flex justify-content-between mt-2">
                            <strong>Total:</strong>
                            <strong id="summaryTotal">$0.00</strong>
                        </div>
                    </div>

                    <form id="paymentForm">
                        <div class="mb-3">
                            <label class="form-label">Payment Method</label>
                            <div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="paymentMethod" id="cardPayment" value="Credit Card" checked>
                                    <label class="form-check-label" for="cardPayment">Credit Card</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="paymentMethod" id="paypalPayment" value="PayPal">
                                    <label class="form-check-label" for="paypalPayment">PayPal</label>
                                </div>
                                <div class="form-check form-check-inline">
                                    <input class="form-check-input" type="radio" name="paymentMethod" id="cashPayment" value="Cash">
                                    <label class="form-check-label" for="cashPayment">Cash on Delivery</label>
                                </div>
                            </div>
                        </div>

                        <div id="cardDetails">
                            <div class="mb-3">
                                <label for="cardNumber" class="form-label">Card Number</label>
                                <input type="text" class="form-control" id="cardNumber" placeholder="1234 5678 9012 3456" required>
                            </div>

                            <div class="row mb-3">
                                <div class="col-md-6">
                                    <label for="expiryDate" class="form-label">Expiry Date</label>
                                    <input type="text" class="form-control" id="expiryDate" placeholder="MM/YY" required>
                                </div>
                                <div class="col-md-6">
                                    <label for="cvv" class="form-label">CVV</label>
                                    <input type="text" class="form-control" id="cvv" placeholder="123" required>
                                </div>
                            </div>

                            <div class="mb-3">
                                <label for="cardName" class="form-label">Name on Card</label>
                                <input type="text" class="form-control" id="cardName" required>
                            </div>
                        </div>

                        <div id="paypalDetails" style="display: none;">
                            <div class="alert alert-info">
                                You will be redirected to PayPal to complete your payment.
                            </div>
                        </div>

                        <div id="cashDetails" style="display: none;">
                            <div class="alert alert-info">
                                Please have exact change ready for the delivery person.
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="specialInstructions" class="form-label">Special Instructions (Optional)</label>
                            <textarea class="form-control" id="specialInstructions" rows="2"></textarea>
                        </div>

                        <div class="d-flex justify-content-between">
                            <a asp-action="Cart" class="btn btn-secondary">Back to Cart</a>
                            <button type="submit" class="btn btn-success" id="submitPayment">Confirm Payment</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Load order summary from cart
            function loadOrderSummary() {
                const cart = JSON.parse(localStorage.getItem('foodCart')) || [];
                const summaryContent = document.getElementById('summaryContent');
                summaryContent.innerHTML = '';
                let total = 0;

                if (cart.length === 0) {
                    summaryContent.innerHTML = '<p>Your cart is empty</p>';
                    document.getElementById('submitPayment').disabled = true;
                } else {
                    cart.forEach(item => {
                        total += item.totalPrice;
                        summaryContent.innerHTML += `
                        <div class="d-flex justify-content-between">
                            <span>${item.name} x${item.quantity}</span>
                            <span>$${item.totalPrice.toFixed(2)}</span>
                        </div>`;
                    });
                    document.getElementById('submitPayment').disabled = false;
                }

                document.getElementById('summaryTotal').textContent = `$${total.toFixed(2)}`;
            }

            // Handle payment method changes
            document.querySelectorAll('input[name="paymentMethod"]').forEach(radio => {
                radio.addEventListener('change', function() {
                    document.getElementById('cardDetails').style.display =
                        this.value === 'Credit Card' ? 'block' : 'none';
                    document.getElementById('paypalDetails').style.display =
                        this.value === 'PayPal' ? 'block' : 'none';
                    document.getElementById('cashDetails').style.display =
                        this.value === 'Cash' ? 'block' : 'none';
                });
            });

            // Handle form submission
            document.getElementById('paymentForm').addEventListener('submit', async function(e) {
                e.preventDefault();

                const cart = JSON.parse(localStorage.getItem('foodCart')) || [];
                if (cart.length === 0) {
                    alert('Your cart is empty. Please add items before proceeding to payment.');
                    return;
                }

                const paymentMethod = document.querySelector('input[name="paymentMethod"]:checked').value;
                let transactionID = null;

                // Generate a simple transaction ID for demo purposes
                if (paymentMethod === 'Credit Card' || paymentMethod === 'PayPal') {
                    transactionID = 'TXN-' + Math.random().toString(36).substr(2, 9).toUpperCase();
                }

                const orderData = {
                    Items: cart,
                    PaymentMethod: paymentMethod,
                    TransactionID: transactionID,
                    SpecialInstructions: document.getElementById('specialInstructions').value
                };

                try {
                    const response = await fetch('@Url.Action("ConfirmOrder", "Orders")', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                        },
                        body: JSON.stringify(orderData)
                    });

                    if (response.ok) {
                        const result = await response.json();
                        if (result.success) {
                            // Clear cart and redirect to order history
                            localStorage.removeItem('foodCart');
                            window.location.href = '@Url.Action("History", "Orders")';
                        } else {
                            alert('Failed to place order: ' + result.message);
                        }
                    } else {
                        alert('Error processing payment. Please try again.');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('An error occurred. Please try again.');
                }
            });

            // Initial load
            loadOrderSummary();
        });
    </script>
}

<style>
    .card {
        border-radius: 15px;
    }

    #orderSummary {
        background-color: #f8f9fa;
    }

    @@media (max-width: 576px) {
        .d-flex.justify-content-between {
            flex-direction: column;
            gap: 10px;
        }

        .btn {
            width: 100%;
        }
    }
</style>